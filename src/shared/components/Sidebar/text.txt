            <MainSection title="Contact" id="contact">
              {/* Contact */}
              <div className={`mb-2 border-b border-gray-100 last:border-b-0 border-2 border-orange-500 rounded p-3` }>

                  <div className="pt-2 pb-4 space-y-4">
                    {/* Barre de recherche */}
                    <input
                      type="text"
                      placeholder="Rechercher un contact..."
                      value={contactSearchTerm}
                      onChange={(e) => handleContactSearch(e.target.value)}
                      className="w-full p-2 border border-gray-300 rounded text-sm"
                    />

                    {/* Liste des contacts */}
                    {loadingContacts ? (
                      <div className="text-center py-4">
                        <span className="text-sm text-gray-500">Chargement des contacts...</span>
                      </div>
                    ) : (
                      <div className="space-y-2">
                        <div className="text-xs text-gray-600 mb-2">
                          {contactSearchTerm.trim() 
                            ? `${contactTotalResults} contacts trouvés pour "${contactSearchTerm}"`
                            : `${contactTotalResults} contacts disponibles (tous secteurs)`
                          }
                        </div>
                        
                        <div className="max-h-64 overflow-y-auto space-y-1">
                          {contacts.map((contact) => (
                            <button
                              key={`${contact.nom_complet}-${contact.entreprise}`}
                              onClick={() => handleContactSelect(contact)}
                              className={`w-full text-left p-2 rounded text-sm hover:bg-gray-50 transition-colors ${
                                filters.selectedContact === contact.nom_complet
                                  ? 'bg-orange-100 text-orange-800 border border-orange-300'
                                  : 'text-gray-700'
                              }`}
                            >
                              <div className="font-medium truncate">
                                {contact.nom_complet}
                              </div>
                              <div className="text-xs text-gray-500 truncate">
                                {contact.qualite} • {contact.entreprise}
                              </div>
                            </button>
                          ))}
                        </div>

                        {/* Pagination */}
                        {contactTotalPages > 1 && (
                          <div className="flex justify-between items-center pt-2 border-t border-gray-200">
                            <button
                              onClick={() => handleContactPageChange(contactCurrentPage - 1)}
                              disabled={contactCurrentPage <= 1}
                              className="px-2 py-1 text-xs bg-gray-100 text-gray-700 rounded disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-200"
                            >
                              Précédent
                            </button>
                            <span className="text-xs text-gray-600">
                              Page {contactCurrentPage} sur {contactTotalPages}
                            </span>
                            <button
                              onClick={() => handleContactPageChange(contactCurrentPage + 1)}
                              disabled={contactCurrentPage >= contactTotalPages}
                              className="px-2 py-1 text-xs bg-gray-100 text-gray-700 rounded disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-200"
                            >
                              Suivant
                            </button>
                          </div>
                        )}

                        {/* Contact sélectionné */}
                        {filters.selectedContact && (
                          <div className="pt-2 border-t border-gray-200">
                            <div className="text-xs font-medium text-gray-700 mb-1">Entreprise sélectionnée:</div>
                            <div className="flex items-center justify-between p-2 bg-orange-50 rounded border border-orange-200">
                              <span className="text-sm text-orange-800 truncate flex-1">
                                {filters.selectedContact}
                              </span>
                              <button
                                onClick={() => updateFilters({ selectedContact: undefined })}
                                className="ml-2 text-orange-600 hover:text-orange-800 text-sm"
                              >
                                ×
                              </button>
                            </div>
                          </div>
                        )}
                      </div>
                    )}
                  </div>
              </div>
            </MainSection>